perform the gate task then speak s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction and do the competition task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the z direction then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then do the gate task then roll s3 degrees	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ) 
say s0 then move s1 in the y direction then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then bring object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and say s1	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
pitch s0 units and roll s1 degrees and move s2 feet in the y direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the x direction then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
yaw s0 units and move in the s1 feet in the y direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the y direction then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task	( seq ( gate ) )
say s0 then move s1 in the y direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
roll s0 degrees and move in the s1 feet in the x direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then flatten s1 feet	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
walk s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and roll s1 degrees and move s2 feet in the x direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the z direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
yaw s0 units and pitch s1 units and move s2 feet in the x direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
move s0 y, move s1 x, and s2 z	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction and say s1	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
roll s0 units and yaw s1 units and move s2 feet in the x direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
roll s0 degrees and move in the s1 feet in the y direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and s1 in the z direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 and do the gate task	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( gate ) )
could you deliver me s0 and move s1 in the y direction	( seq (  bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the y direction then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the y direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
speak s0 then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
go grab the s0 object and roll s1 degrees	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) )  )
perform the gate task then say s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 feet in the z direction and pitch s1 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the y direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
speak s0 then move s1 in the z direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and roll s1 units and move s2 feet in the x direction	( seq ( move ( yaw lambda ( $0 ( s0) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and move in the s1 feet in the x direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction and s1 in the y direction and s2 in the x direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the y direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
go s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
pitch s0 units and perform the gate task	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
pitch s0 units and roll s1 units	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
speak s0 then roll s1 degrees then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
clean s0 then move s1 in the y direction then do the gate task then grab object s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 and say s1	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
go out and look for s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 subsequently locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
speak s0 then move s1 in the x direction then grab s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then clean up s3 subsequently locate s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
prance s0 in the y direction then roll s1 degrees then move s2 in the z direction then say s3 then do goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then clean up s3 subsequently locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
move s0 in the y direction then pivot s1 degrees then move s2 in the x direction then say s3 perform the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move s0 in the y direction then pivot s1 degrees then move s2 in the x direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then yaw s2 then flatten s3 then bring s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then declutter area s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 next move downwards s2 meters in the z direction then flatten s3 then grab s4 then clean up s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction subsequently clean up s1 then move forward s2 in the x direction then flatten s3 then bring s4 subsequently advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
flatten s0 in the y direction and pitch s1 units	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the x direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 subsequently roll s1 then flatten s2 then say s3 then bring object s4 next bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then swerve s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
veer s0 in the x direction then speak s1 then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction subsequently flatten s3 next pick up s4 then wash this thing s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
give to me s0 and speak s1 and clean s2	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move backwards s2 in the x direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then grab s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
stroll s0 in the z direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then guide s4 over then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
clean s0 then move s1 in the x direction then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab object s2 then declutter the area s3 ( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 feet in the y direction and flatten s1	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then grab s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then zigzag s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then say s2 then declutter s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 next move s1 in the x direction after bring object s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
give to me s0 next move s1 in the z direction next s2 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
go out and look for s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move upwards s2 s2 in the z direction then say s3 then advance s4 in the x direction then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then say s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then yaw s2 then flatten s3 then bring s4 subsequently advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 and move in the s1 feet in the z direction	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the x direction then flatten s1 then wash s2 next flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then move up s2 in the z direction then say s3 then advance s4 in the x direction then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 then move forward s2 in the x direction then flatten s3 then grab s4 then clean up s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then pitch s1 units next move s2 in the y direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
carry out the move task s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 subsequently bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
swerve s0 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then clean up s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
bring s0 and flatten s1	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
flatten s0 subsequently pivot s1 subsequently clean up s2 then say s3 subsequently bring s4 subsequently bring the thing s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then bring s4 subsequently find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then stroll s2 in the x direction then say s3 subsequently escort s4 then do the goal test then clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
pitch s0 units and flatten s1 ( seq ( move ( pitch lambda	( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then say s1 then move s2 in the x direction then do the gate task then declutter s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
scrub this thing then move s1 in the y direction	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
speak s0 and move s1 in the y direction and do the gate task and bring item s2 and clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 afterwards pivot s1 afterwards flatten s2 afterwards say s3 afterwards grab s4 afterwards wash thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the z direction next do the gate task next bring item s2 next pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then grab object s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the z direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
bring object s0 over to me	( seq ( bring lambda ( $0 ( s0 ) ) ) )
clean up this area then do the gate task then bring item s2 then roll s3 degrees	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then scrub s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction subsequently flatten s1 then move backwards s2 in the x direction then clean up s3 subsequently locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction next flatten s1 then yaw s2 then flatten s3 then bring s4 subsequently clean up s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then declutter area s3 next do the goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
say s0 then move s1 in the z direction then grab item s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 and move in the s1 feet in the y direction	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task and grab item s2 in addition yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then clean s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 next flatten s2 then clean s3 then locate object s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then move z s4 do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then bring s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then speak s1 then move s2 in the x direction then do the gate task then declutter s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 next roll s2 then flatten s3 next guide s4 over subsequently clean up s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
clean s0 and flatten s1	( seq ( clean ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 subsequently flatten s2 then say s3 subsequently guide s4 over then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 subsequently roll s1 subsequently flatten s2 then say s3 subsequently grab item s4 subsequently declutter this area s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
tidy up this room s0 units and roll s1 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 next move s1 in the y direction then say s2 subsequently clean s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then guide s4 over then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the z direction then say s3 perform the goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then move up s2 in the z direction then say s3 then bring  s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 subsequently move s1 in the x direction subsequently do the gate task subsequently say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move downwards s2 meters in the z direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
spin s0 degrees	( seq ( move ( rotate lambda ( $0 ( s0 ) ) ) ) )
walk s0 in the x direction then roll s1 degrees then move s2 in the y direction then say s3 after do the goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
say s0 then move s1 in the y direction then grab s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction next flatten s1 next move upwards s2 in the z direction next flatten s3 then grab s4 then scrub this thing s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then grab s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $6 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 subsequently wash s2 then flatten s3 subsequently bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
can you clean this thing	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
flatten s0 then pivot s1 then stroll s2 in the x direction then say s3 subsequently escort s4 then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then weave s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
can you clean this object	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task then clean s0 up then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then find s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then utter s1 then flatten at a depth of s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( words ( say lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction next flatten s1 then move backwards s2 in the x direction next flatten s3 then pick up s4 then clean up s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
stroll s0 in the z direction then roll s1 degrees then move s2 in the y direction then say s3 after do the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
detect s0 in the x direction afterwards flatten s1 then walk s2 in the z direction then flatten s3 subsequently grab s4 subsequently clean up s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then clean s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 next move s1 in the z direction then do the gate task then say s2 and pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
veer s0 in the x direction then zigzag s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
clean s0 then move s1 in the z direction then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
clean s0 then move s1 in the y direction then grab s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 and roll s1 degrees and move s2 in the y direction after say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move forward s2 in the y direction then say s3 then bring item s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then say s1 then move s2 in the x direction then do the gate task then declutter s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 next move x s5 then do the goal test then say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then flatten s3 then locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
say s0 in addition move s1 in the z direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then clean s3 do the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then utter s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab object s2 then clean up s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then clean item s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
mention s0 to the judges then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction next flatten s1 subsequently walk s2 in the y direction subsequently flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then declutter s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
flatten s0 and roll s1 degrees	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then proceed s2 in the x direction then say s3 then pick up s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then bring s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then clean up s2 next say s3 subsequently bring s4 next say s5 and say s6	( seq ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the y direction subsequently clean up s1 next move back s2 in the y direction next flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then clean s3 perform the goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
walk s0 in the x direction then roll s1 degrees then move s2 in the x direction then say s3 then perform goal	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 next roll s1 then move backwards s2 in the y direction then say s3 then bring item s4 then do the goal test subsequently declutter the area s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4 ) ) ) ) ( goal ) )
flatten s0 then roll s1 then flatten s2 then say s3 then grab object s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
tidy up this room then speak s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 next move s1 in the y direction then say s2 after yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move back s2 in the y direction then flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 then walk s2 in the z direction then flatten s3 subsequently grab s4 subsequently advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then swerve s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction subsequently flatten s1 next move back s2 in the y direction next flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 locate thing s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction and yaw s1 units subsequently move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then yaw s2 then flatten s3 then bring s4 subsequently declutter the area s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then declutter area s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction next grab object s2 next roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then run forward s2 in the x direction then say s3 subsequently bring target s4 then do the goal test next wash object s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4 ) ) ) ) )
clean s0 then move s1 in the x direction then grab object s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )