move s0 feet in the x direction and roll s1 degrees	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the z direction then grab object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task next say s0 next move s1 in the z direction next say s2 next pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task next say s0 next move s1 in the y direction next say s2 next roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task next say s0 next move s1 in the x direction next say s2 next roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and do the competition task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( gate ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
may you give me s0 and move s1 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
tell me s0 and move s1 in the x direction	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction afterwards pitch s1 units afterwards move s2 in the x direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
tell me s0 afterwards move s1 in the x direction	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
perform the gate task afterwards say s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees afterwards move s2 in the y direction next say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the x direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
move s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and perform the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 feet in the y direction then move s1 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
roll s0 units and yaw s1 units and move s2 feet in the z direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then do the gate task then yaw s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and roll s1 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then bring object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then do the gate task then pitch s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
locate s0 and do the gate task	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( gate ) )
say s0 then move s1 in the y direction then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then yaw s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
maneuver s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
speak s0 then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then do the gate task then roll s3 degrees	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then do the gate task then roll s3 degrees	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and move in the s1 feet in the z direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction and perform the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
give to me s0 and move s1 in the x direction and s2 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
could you deliver me s0	( seq (  bring ( val lambda ( $0 ( s0 ) ) ) ) )
move s0 x, move s1 z, and s2 y	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
do gate ( seq ( gate ) )
speak s0 then move s1 in the x direction then bring s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction and s1 in the x direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
go s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the y direction then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
can you bring me s0 and move s1 in the x direction and s2 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
pitch s0 units and move in the s1 feet in the x direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the x direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
roll s0 degrees and do the competition task	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( gate ) )
speak s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and s1 in the y direction and s2 in the z direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
give to me s0 and move s1 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
maneuver s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then do the gate task then pitch s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
roll s0 and say s1	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
yaw s0 units and roll s1 degrees and move s2 feet in the y direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 feet in the x direction and pitch s1 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
tell me s0 and pitch s1 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the z direction then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
tell me s0 and roll s1 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
pitch s0 units and roll s1 degrees and move s2 feet in the z direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
pitch s0 degreess and say s1	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the z direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
may you give me s0 and move s1 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and perform the gate task	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( gate ) )
can you bring me s0 and move s1 in the y direction and s2 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and move in the s1 feet in the y direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
give to me s0 and move s1 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the y direction then grab s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 feet in the y direction and pitch s1 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the z direction then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then say s2 then roll s3 degrees ( seq ( say ( words lambda	( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
locate five of s0 in the pool	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction and say s1	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
move s0 feet in the y direction and roll s1 degrees	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
go s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
can you bring me s0 and move s1 in the y direction and s2 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
give to me s0 and move s1 in the z direction and s2 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then roll s3 degrees	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then roll s1 degrees then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
go grab the s0 object and pitch s1 units	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) )  )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then do the gate task then pitch s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
do competition task	( seq ( gate ) )
give to me s0 and move s1 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
speak s0 then yaw s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 z, move s1 y, and s2 x	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the z direction then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
tell me s0 and yaw s1 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the y direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
can you bring me s0 and move s1 in the x direction and s2 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then do the gate task then roll s3 degrees	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
go grab the s0 object and yaw s1 units	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) )  )
say s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the z direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then pitch s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 feet and pitch s1 units	( seq ( move ( y lambda ( $0 (s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the z direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the z direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
flatten s0 meters	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
move s0 feet in the x direction then move s1 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
yaw s0 units and roll s1 degrees and move s2 feet in the z direction ( seq ( move ( yaw lambda ( $0 ( s0 )  ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then do the gate task then pitch s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction and perform the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( gate ) )
speak s0 then yaw s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
go find the s0 in the pool ( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
go look for the s0 in the pool ( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
go bring the s0 from the pool ( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
speak s0 then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then bring s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then flatten s1 feet	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $0 ( s0 ) )  ) ) )
say s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction and s1 in the y direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
speak s0 then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
can you speak s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
walk s0 in the z direction ( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ) 
speak s0 then pitch s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units then yaw s1 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the x direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the y direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and roll s1 units and move s2 feet in the y direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the x direction then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
could you give me s0	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 feet in the z direction and roll s1 degrees	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
roll s0 degrees and move in the s1 feet in the z direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
move s0 x, move s1 y, and s2 z	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
speak s0 then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then do the gate task then pitch s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then roll s1 degrees then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
give to me s0 and move s1 in the x direction and s2 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
locate s0 in the pool	( seq ( find lambda ( $0 ( s0 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
tell me s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then pitch s1 units then move s2 in the y direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
give to me s0 and move s1 in the y direction and s2 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
roll s0 degrees	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and do the competition task	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
tell me s0 and go grab s1	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( find ( val lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then do the gate task then yaw s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
please rotate s0 degrees	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
speak s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then do the gate task then yaw s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the z direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then do the gate task then pitch s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 and do the competition taks	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( gate ) )
yaw s0 units and roll s1 units and move s2 feet in the z direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
roll s0 degrees and perform the gate task	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( gate ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
roll s0 units and yaw s1 units and move s2 feet in the y direction	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then do the gate task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
speak s0 then move s1 in the x direction then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then do the gate task then roll s3 degrees	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and pitch s1 units and move s2 feet in the y direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
could you deliver me s0 and move s1 in the z direction	( seq (  bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
talk by saying s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
perform the flatten task s0 feet	( seq ( flatten ( num lambda ($0 (s0 ) ) ) ) )
speak s0 then yaw s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
could you deliver me s0 and move s1 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
roll s0 degrees and pitch s1 units	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the z direction then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the x direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then do the gate task then roll s3 degrees	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then grab object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
give s0 to me	( seq ( bring ( val lambda ( $0 (  s0 ) ) ) ) )
speak s0 then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( grab lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
could you deliver me s0 and pitch s1 units	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
tell me who that s0 is	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
speak s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units and pitch s1 units and move s2 feet in the z direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
speak s0 then pitch s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction and do the competition task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( gate ) )
go grab the s0 object and move s1 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) )  )
move s0 in the z direction then yaw s1 units then move s2 in the y direction then do the gate task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ) 
move s0 in the y direction then yaw s1 units then move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and yaw s1 units	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
move s0 feet in the z direction then move s1 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction and s1 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
may you give me s0 and move s1 in the z direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
robot pelase give s0 to me	( seq ( bring ( val lambda ( $0 (  s0 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the x direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then flatten s1 feet	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $0 ( s0 ) ) )  ) )
move s0 in the x direction then yaw s1 units then move s2 in the y direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the z direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction then do the gate task then yaw s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 to the girl and go briy ng me s1	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( bring ( val lambda ( $1 ( s1 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the y direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and s1 in the z direction and s2 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
give to me s0 and move s1 in the y direction and s2 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
maneuver s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
go grab the s0 object and perform the gate task	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( gate ) )
say s0 and perform the gate task	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( gate ) )
move s0 in the x direction then pitch s1 units then move s2 in the y direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then bring object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then bring item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
go grab the s0 object and move s1 in the y direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) )  )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then yaw s1 units then move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and move in the s1 feet in the z direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
give to me s0 and move s1 in the z direction and s2 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
pitch s0 units then pitch s1 units	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the x direction then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
speak s0 then move s1 in the x direction then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) )
yaw s0 degrees and pitch s1 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction and s1 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction and say s1	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the z direction then bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then bring item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
walk s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the y direction then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then do the gate task then yaw s3 units	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then do the gate task then pitch s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then say s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the x direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and do the competition task	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( gate ) )
speak s0 then move s1 in the y direction then do the gate task then grab object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then do the gate task then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
can you bring me s0 and move s1 in the z direction and s2 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction and s1 in the x direction and s2 in the z direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then do the gate task then yaw s3 units	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
roll s0 degrees then roll s1 degrees	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
tell me s0 and move s1 in the y direction	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then do the gate task then pitch s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then bring object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
yaw s0 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the x direction then do the gate task then yaw s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pitch s1 units then move s2 in the z direction then do the gate task then roll s3 degrees	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
roll s0 degrees and yaw s1 units	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then pitch s1 units then move s2 in the z direction then do the gate task then roll s3 degrees	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then bring item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
can you bring me s0 and move s1 in the z direction and s2 in the y direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) )
perform pool test task	( seq ( gate ) )
move s0 in the y direction then pitch s1 units then move s2 in the y direction then do the gate task then yaw s3 units	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
tell me s0 and move s1 in the z direction	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
could you deliver me s0 and yaw s1 units	( seq (  bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
yaw s0 units and roll s1 degrees and move s2 feet in the x direction	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
could you deliver me s0 and say s1	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the y direction then bring s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
go grab the s0 object and move s1 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) )  )
go grab the s0 object	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
speak s0 then move s1 in the x direction then grab s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction and s1 in the x direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
go grab the s0 object and say s1	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then pitch s1 units then move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
could you deliver me s0 and roll s1 degrees	( seq (  bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then find the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 and move in the s1 feet in the x direction	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then clean up s3 then do the goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) )  goal ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then locate item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction subsequently say s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then move forward s2 in the x direction then flatten s3 then bring s4 subsequently advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction 	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
tidy up this room	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab object s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
guide s0 over	( seq ( bring lambda ( $0 ( s0 ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction and say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move backwards s2 in the y direction then say s3 then bring item s4 then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
move s0 feet in the y direction and flatten s1	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then utter s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction then s1 in the z direction and s2 in the y direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the z direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move downwards s2 meters in the z direction then flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 next flatten s2 then scrub obj s3 subsequently locate item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then declutter ara s3 then locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then walk s2 in the y direction then flatten s3 then locate s4 subsequently advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction next flatten s1 then yaw s2 then flatten s3 then bring s4 subsequently advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 next pivot s1 then move up s2 in the z direction then say s3 next bring  s4 subsequently do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then bring s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
say s0 then utter this statement s1 then move s2 in the x direction then do the gate task then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 meters in the x direction and pitch s1 units	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 subsequently locate s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move back s2 in the y direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then communicate s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
wash this object then do the gate task then grab item s2 then roll s3 degrees	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then yaw s1 units then move s2 in the z direction then do the gate task then vocalize s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and pitch s1 units subsequently move s2 in the z direction and do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 subsequently locate s4 over then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the x direction then say s3 do the goal	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
flatten s0 then roll s1 next flatten s2 then say s3 then locate object s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction next flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
speak s0 and move s1 in the y direction and do the gate task and bring item s2 and roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move upwards s2 in the z direction then flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
move downwards s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 next flatten s3 next bring s4 subsequently advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then swerve s1 units then move s2 in the x direction then do the gate task then declutter s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
clean s0 up then move s1 in the z direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then yaw s1 units then flatten at a depth of s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move upwards s2 s2 in the z direction then say s3 then escort s4 then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
prance s0 in the x direction then roll s1 degrees then move s2 in the z direction then say s3 then perform goal	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
go out and look for s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then roll s1 then flatten s2 then say s3 then grab item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction in addition roll s1 degrees  in addition move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then clean s0 up then move s1 in the y direction then say s2 then roll s3 radians	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move forward s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then say s6	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
say s0 then utter s1 then grab object s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 in the x direction then flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the z direction then find object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then grab s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the y direction then say s3 then do goal task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the x direction then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the y direction then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the y direction next flatten s1 next move back s2 in the y direction subsequently flatten s3 then grab s4 then declutter this area s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 next say s3 subsequently bring s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then bring object s2 then scrub thing s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
carry out the move task s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
move forward s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then roll s1 then proceed s2 in the x direction then say s3 then bring s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 next flatten s2 then clean up s3 subsequently locate s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then scrub item s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently pivot s1 then declutter s2 then say s3 bring thing s4 subsequently say s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction next yaw s1 units next move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
zigzag s0 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move back s2 in the y direction then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the z direction then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
say s0 next move s1 in the y direction after do the gate task after grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 next roll s1 next flatten s2 next say s3 then grab s4 next clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
say s0 then utter s1 then move s2 in the y direction then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 next move downwards s2 meters in the z direction then flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
declutter s0 then move s1 in the y direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 next roll s2 subsequently flatten s3 then bring s4 then declutter the area s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then clean s2 next say s3 then bring s4 then say s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
perform the gate task declutter s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then declutter area s3 then locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
say s0 then yaw s1 units then flatten at a depth of s2 then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the y direction then say s3 then perform the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
advance s0 in the z direction then utter s1 then move s2 in the z direction then do the gate task then clean s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then utter s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction and pitch s1 units and move s2 in the y direction and do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
flatten s0 then move s1 in the y direction then do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task and speak s0 then move s1 in the z direction and say s2 and yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the z direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then declutter area s0 then move s1 in the z direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
walk s0 in the y direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then guide s4 over then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the x direction then find object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then say s2 then scrub item s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 next proceed s1 in the x direction then say s2 then bring s3 next do the goal test subsequently clean up s4 and goal then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then pick up s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 and roll s1 degrees	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
flatten s0 and clean s1	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) )
move s0 in the x direction then weave s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
prance s0 in the y direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 subsequently move backwards s2 in the x direction then flatten s3 subsequently bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then clean up object s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
aquire s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then find object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move backwards s2 in the y direction then say s3 then advance s4 in the x direction then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then declutter s3 subsequently locate s4 over then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the z direction then say s3 do the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
clean s0 up then move s1 in the y direction then grab s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move forward s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 next s1 next proceed s2 in the x direction then say s3 then bring s4 next do the goal test subsequently say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then communicate s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 afterwards pivot s1 afterwards flatten s2 afterwards say s3 afterwards grab s4 afterwards wash thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 next move s1 in the x direction afterwards bring s2 afterwards clean up s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction next flatten s1 next move back s2 in the y direction subsequently flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 subsequently pivot s1 next flatten s2 subsequently say s3 pick up thing s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean up s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 next roll s1 next flatten s2 next say s3 then grab object s4 next clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
wash this thing	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
flatten s0 then pivot s1 next flatten s2 then clean up s3 then locate s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then say s1 then move s2 in the x direction then do the gate task then deliver s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pivot s1 degrees then move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
go out and look for s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then grab item s2 then clean up s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
scrub this thing	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 next flatten s2 then say s3 subsequently locate item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 pick up thing s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
walk s0 in the x direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 in the x direction then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
walk s0 in the z direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the x direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
go out and look for s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the x direction then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
clean s0 then move s1 in the z direction then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the z direction then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
speak s0 then move s1 in the z direction then do the gate task then find item s2 then pitch s3 units in sequential order	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction next flatten s1 then move backwards s2 in the x direction next flatten s3 then pick up s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then utter s1 then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then grab s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task say s0 then move s1 in the z direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move downwards s2 in the z direction then say s3 then bring object s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then grab s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
give to me s0 and move s1 in the y direction and s2 in the x direction	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then scrub object s3 locate thing s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then say s1 then move s2 in the z direction then do the gate task then clean up s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then run forward s2 in the x direction then say s3 then advance s4 in the z direction then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then declutter s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then grab object s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then utter s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then bring s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
go grab and s0 object then move s1 in the y direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) )  )
flatten s0 then pivot s1 then move downwards s2 in the z direction then say s3 then advance s4 in the z direction then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the x direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then clean up s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
prance s0 in the z direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
carry out the gate task then ay s0 then proceed s1 in the y direction then say s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the y direction then communicate s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move upwards s2 in the z direction then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then bring s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently pivot s1 then flatten s2 then say s3 bring thing s4 subsequently say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then yaw s2 then flatten s3 then grab s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
speak s0 and move s1 in the y direction next do the gate task then bring object s2 and pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then flatten s3 then pick up s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 then stroll foward s2 in the x direction then flatten s3 next pick up s4 then wash this object s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
move s0 feet in the x direction and flatten s1	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the x direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then declutter s2 then flatten s3 subsequently bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
bring object s0	( seq ( bring lambda ( $0 ( s0 ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then declutter s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
find s0 and flatten s1	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
speak s0 afterwards move s1 in the z direction then do the gate task then bring object s2 next yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task declutter s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then clean up s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 then roll s1 degrees then move s2 in the y direction then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently roll s1 then declutter s2 then say s3 then bring object s4 next bring the thing s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 next roll s1 then move backwards s2 in the y direction then say s3 then bring item s4 then do the goal test subsequently bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move upwards s2 s2 in the z direction then say s3 then grab s4 then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then say s1 to that person over there then do the gate task then say s2 then clean up object s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 next move downwards s2 meters in the z direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
say s0 and roll s1 degrees in addition move s2 in the y direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
pitch s0 units and flatten s1	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
speak s0 then move s1 in the z direction then grab item s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( pitch lambda ( $3 ( s3 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then say s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
say s0 next pitch s1 units next move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 and find s1	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( find ( val lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
advance s0 in the z direction then flatten s1 units then move s2 in the z direction then do the gate task then clean s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( flatten ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then grab s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
move forward s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then say s6	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then pivot s1 next flatten s2 then say s3 then locate s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the x direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
may you please clean up this space over there	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
say s0 next move s1 in the x direction after bring object s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 then pick up s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the y direction then grab s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move backwards s2 in the y direction then say s3 then grab item s4 then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then clean up s3 then do the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move downwards s2 meters in the z direction then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
speak s0 then say s1 then do the gate task then bring object s2 then scrub thing s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
go attempt to win the robotics contest 	( seq ( gate ) )
pitch s0 units next move in the s1 feet in the z direction	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then flatten s3 then grab s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 feet in the z direction and flatten s1	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the x direction next flatten s1 next move upwards s2 in the z direction next flatten s3 then grab s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then clean s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then move upwards s2 in the z direction next flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then clean s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction subsequently flatten s3 next pick up s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
robot please utter s0 then move s1 in the x direction then grab item s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
veer s0 in the x direction then zigzag s1 units then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then say s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task say s0 then move s1 in the z direction then say s2 then clean s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the x direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
detect s0 in the x direction next flatten s1 then roll s2 then flatten s3 then guide s4 over then clean up s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
pitch s0 units then conclude with pitch s1 units	( seq ( move ( pitch lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then find object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
vocalize s0 then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the z direction then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction subsequently clean up s1 then move upwards s2 in the z direction next flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
say s0 then perform the gate task	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( gate ) )
flatten s0 subsequently pivot s1 then flatten s2 next say s3 subsequently grab s4 afterwards say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then escort s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
wash this object then move y s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then locate s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean s0 up then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
speak s0 then move s1 in the y direction then do the gate task then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 in the x direction then flatten s3 then grab s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the x direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then pivot s1 degrees then move s2 in the y direction then say s3 then do the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
flatten s0 next roll s1 next flatten s2 next say s3 next pick up s4 next wash object s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
say s0 subsequently move s1 in the z direction subsequently do the gate task then grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 and bring s1	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( bring ( val lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move backwards s2 in the x direction then flatten s3 then locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then flatten s3 then locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the y direction then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then locate object s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
say s0 next move s1 in the y direction then say s2 subsequently pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the z direction then utter s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then flatten s3 then locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task then clean s0 up then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
clean up this area and perform the gate task	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( gate ) )
flatten s0 then roll s1 then proceed s2 in the x direction then say s3 then advance s4 in the x direction then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 subsequently grab s4 subsequently wash this object s5	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then move s1 in the x direction then do the gate task then bring item s2 then roll s3 degrees	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
prance s0 in the x direction then roll s1 degrees then move s2 in the z direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
declutter this area	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
move s0 in the x direction then weave s1 units then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction next flatten s1 subsequently wash s2 subsequently flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
clean s0 then move s1 in the z direction then grab object s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then locate s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then say s4 then do the goal test then move z s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 next roll s1 next flatten s2 next say s3 then grab s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move backwards s2 in the x direction then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 then stroll foward s2 in the x direction then flatten s3 next pick up s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
perform the goal chore	( seq ( goal ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then declutter area s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently pivot s1 subsequently flatten s2 then say s3 subsequently bring s4 subsequently bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
move s0 in the y direction subsequently pitch s1 units and move s2 in the z direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 subsequently clean up s2 then say s3 subsequently guide s4 over then say s5 and say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then stroll s2 in the x direction then say s3 then grab s4 then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then yaw s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then move up s2 in the z direction then say s3 then grab target s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
clean up s0	( seq ( clean ( obj ( $0 ( s0 ) ) ) ) )
speak s0 then move s1 in the x direction then find s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the y direction then find s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 next pivot s1 then move up s2 in the z direction then say s3 next bring  s4 subsequently do the goal test then clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then move s1 in the y direction then do the gate task then say s2 then clean up object s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then yaw s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
aquire s0	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
flatten s0 and roll s1 units ( seq ( flatten ( num lambda	( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
perform the gate task scrub s0 then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
go out and look for s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 next say s3 then bring item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
walk s0 in the y direction then roll s1 degrees then move s2 in the y direction then say s3 after do the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then flatten s2 then say s3 locate thing s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
scrub this object	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
flatten s0 and roll s1 degrees	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) )
wash this thing then pitch s1 units then move s2 in the y direction then do the gate task then yaw s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
clean s0 then move s1 in the y direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then roll s3 degrees	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
walk s0 in the z direction then roll s1 degrees then move s2 in the x direction then say s3 then do the competition task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
flatten s0 afterwards pivot s1 afterwards flatten s2 afterwards say s3 afterwards grab s4 afterwards find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
go out and look for s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
perform the gate task then declutter s0 then move s1 in the x direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move upwards s2 s2 in the z direction then say s3 subsequently escort s4 then do the goal test then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then speak s0 then move s1 in the z direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then stroll s2 in the x direction then say s3 then advance s4 in the z direction then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 meters and pitch s1 units	( seq ( flatten ( num lambda ( $0 (s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
flatten s0 afterwards pivot s1 afterwards flatten s2 afterwards say s3 afterwards grab s4 afterwards bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the z direction then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then move forward s2 in the y direction then say s3 then advance s4 in the z direction then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 feet in the z direction and flatten s1	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then say s2 then scrub item s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 next walk s2 in the y direction then flatten s3 then escort s4 then do the goal test next clean up s5 then goal	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then move downwards s2 in the z direction then say s3 then pick up object s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
speak s0 then move s1 in the z direction then do the gate task then bring object s2 then flatten s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction next flatten s1 then stroll wash s2 then flatten s3 next bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
say s0 then say s1 then do the gate task then say s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then grab s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the x direction then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 next roll s1 next flatten s2 next say s3 next pick up s4 next say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
walk s0 in the x direction then roll s1 degrees then move s2 in the y direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then move backwards s2 in the x direction then flatten s3 then pick up s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then declutter area s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
communicate this senetence s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 bring thing s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab object s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then utter s1 then move s2 in the x direction then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then say s4 then do the goal test then bring the thing s5 and bring me s6	( seq ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
veer s0 in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
flatten s0 then zigzag s1 units then move s2 in the x direction then do the gate task then deliver s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction afterwards flatten s1 then move forward s2 in the x direction then flatten s3 then grab s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then move forward s2 in the y direction then say s3 then bring item s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then bring object s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the x direction then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 subsequently pivot s1 next flatten s2 subsequently say s3 pick up thing s4 next clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then run forward s2 in the x direction then say s3 then grab target s4 then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the y direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move forward s2 in the y direction then say s3 then pick up item s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 next flatten s2 then say s3 subsequently locate s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean s0 up then move s1 in the z direction then say s2 then pitch s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then find object s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then find the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
say s0 and flatten s1	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then pivot s1 degrees then move s2 in the y direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then move forward s2 in the y direction then say s3 then bring item s4 then do the goal test then wash this object s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4) ) ) ) )
flatten s0 next roll s1 next flatten s2 next say s3 then grab object s4 next bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then flatten s3 then locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then bring s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
clean s0 then move s1 in the x direction then do the gate task then grab object s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
clean s0 then move s1 in the x direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
prance s0 in the z direction then roll s1 degrees then move s2 in the z direction then say s3 then perform goal	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
clean s0 then move s1 in the x direction then grab s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 next yaw s2 next flatten s3 then bring s4 subsequently wash the object s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then bring the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then clean up s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
clean s0 up then move s1 in the x direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 and say s1	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) )
say s0 afterwards move s1 in the x direction then do the gate task afterwards grab item s2 then yaw s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then pick up s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) )
go grab the s0 object and perform the gate task	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( gate ) )
detect s0 in the x direction next flatten s1 then roll s2 then flatten s3 then guide s4 over then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction then roll s1 degrees then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently pivot s1 then move downwards s2 in the z direction then say s3 subsequently bring object s4 then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then pitch s1 units and move s2 in the z direction and do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
clean s0 up then move s1 in the z direction then do the gate task then grab object s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 next roll s2 subsequently flatten s3 then bring s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then pivot s1 then stroll s2 in the x direction then say s3 then escort s4 then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
say s0 next pitch s1 units after move s2 in the z direction then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move upwards s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
detect s0 in the x direction then flatten s1 next roll s2 then flatten s3 next guide s4 over subsequently advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then clean s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 next move s1 in the y direction after do the gate task after grab object s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then locate s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the x direction then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then run forward s2 in the x direction then say s3 subsequently bring target s4 then do the goal test next find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
utter this statement s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the x direction then declutter s3 next do the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
execute the goal duty	( seq ( goal ) )
detect s0 in the y direction subsequently flatten s1 then move backwards s2 in the x direction then flatten s3 subsequently locate s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then say s2 then declutter area s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
weave s0 units	( seq ( move ( yaw lambda ( $0 ( s0 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
say s0 then yaw s1 units  in addition move s2 in the x direction then do the gate task then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 then flatten s3 then bring s4 then advance s5 in the z direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) )
detect s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction then swerve s1 units then move s2 in the x direction then do the gate task then declutter s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the x direction the conclude witth roll s1 degrees and move s2 in the y direction then do the gate task	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( gate ) )
perform the gate task then speak s0 then move s1 in the x direction then say s2 then declutter s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the y direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then bring s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then declutter s2 next say s3 then bring item s4 then move z s5 and find s6	( seq ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then find s2 then yaw s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then bring item s4 then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then clean up item s0 then move s1 in the y direction then say s2 then roll s3 degrees	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then clean s0 then move s1 in the z direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then clean s1	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) )
perform the gate task then say s0 then move s1 in the x direction then say s2 then scrub item s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then advance s4 in the x direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 next pitch s1 units after move s2 in the z direction then say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the z direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
prance s0 in the y direction then roll s1 degrees then move s2 in the x direction then say s3 then perform goal	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then say s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the z direction then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction then flatten s1 then stroll foward s2 in the x direction then flatten s3 then bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
move s0 in the x direction then pitch s1 units then move s2 in the x direction then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
declutter this area then move s2 in the z direction then do the gate task then say s3	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then find the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
perform the gate task then ay s0 then move s1 in the y direction then find s2 then pitch s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 next say s3 then bring s4 then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
speak s0 next move s1 in the x direction afterwards bring s2 afterwards pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then roll s1 then run forward s2 in the x direction then say s3 then bring target s4 then do the goal test then find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 then walk s2 in the y direction then clean s3 then locate s4 subsequently advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( obj ( clean lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the x direction then do the gate task then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the z direction then clean up s3 then do the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
say s0 then move s1 in the y direction then grab object s2 then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
clean s0 then move s1 in the y direction then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
go down at a s0 depth	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then flatten s3 then say s4 then do the goal test then then move x s5 say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then communicate s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
turn the robot s0 degrees	( seq ( move ( rotate lambda ( $0 ( s0 ) ) ) ) )
speak s0 afterwards move s1 in the y direction next do the gate task then say s2 then roll s3 degrees	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( roll lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the x direction then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then move forward s2 inches in the y direction then flatten s3 then locate s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
detect s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
execute the flatten job	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 next walk s2 in the y direction then flatten s3 then escort s4 then advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
flatten s0 then weave s1 units then move s2 in the x direction then do the gate task then declutter s3	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
say s0 then move s1 in the z direction next do the gate task next bring item s2 next clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( bring ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently pivot s1 then flatten s2 next say s3 subsequently grab s4 afterwards clean up s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) )
pitch s0 units and flatten s1 ( seq ( move ( pitch lambda	( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
say s0 and roll s1 degrees and move s2 in the y direction and say s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction then roll s1 degrees then move s2 in the y direction then clean s3 do the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move s0 in the z direction subsequently pitch s1 units and move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then move upwards s2 s2 in the z direction then say s3 subsequently escort s4 then do the goal test then wash the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( goal ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
say s0 then yaw s1 units then move s2 in the x direction then do the gate task then clean s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the y direction then flatten s1 then roll s2 next flatten s3 next bring s4 subsequently clean up s5 then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( clean ( obj lambda ( $5 ( s5 ) ) ) ) ( goal ) )
perform the gate task say s0 then move s1 in the z direction subsequently say s2 then clean up s3 units	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then s1 in the x direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) )
move s0 feet and flatten s1	( seq ( move ( y lambda ( $0 (s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
wash this object	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) )
move s0 in the z direction then yaw s1 units then move s2 in the x direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the x direction then clean up s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then grab s4 then bring the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( x lambda ( $4 ( s4 ) ) ) ) ( bring ( val lambda ( $5 ( s5 ) ) ) ) )
move s0 feet in the x direction and flatten s1	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
detect s0 in the x direction subsequently flatten s1 next yaw s2 next flatten s3 then bring s4 subsequently advance s5 in the x direction then do the goal test	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( yaw lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) )
move s0 in the z direction then pivot s1 degrees then move s2 in the x direction then say s3 next perform the goal task	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( goal ) )
move s0 in the x direction then say s1 then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then advance s4 in the z direction then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 then roll s1 then flatten s2 then say s3 then locate s4 over then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 subsequently pivot s1 then move downwards s2 in the z direction then say s3 subsequently bring object s4 then do the goal test then clean up s5 then say s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( clean ( obj lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
say s0 then move s1 in the y direction then do the gate task then find item s2 then pitch s3 units	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( gate ) ( find ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
advance s0 in the z direction then flatten s1 units then move s2 in the z direction then do the gate task then say s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( flatten ( pitch lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( gate ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
perform the gate task then say s0 then move s1 in the z direction then say s2 then clean up s3	( seq ( gate ) ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction next flatten s1 then stroll foward s2 in the x direction then flatten s3 next bring s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
give to me s0 and move s1 in the y direction and clean s2	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) )
aquire s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
say s0 then move s1 in the x direction then grab item s2 then clean up s3	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( x lambda ( $1 ( s1 ) ) ) ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction subsequently clean up s1 next move downwards s2 meters in the z direction then flatten s3 then bring s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( clean ( obj lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( bring ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
move s0 in the z direction then utter s1 then move s2 in the x direction then do the gate task then clean s3	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( say ( words lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( gate ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
go out and look for s0 in the x direction then flatten s1 then roll s2 then flatten s3 then say s4 then advance s5 in the x direction then do the goal test then bring the thing s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
flatten s0 then pivot s1 then clean up s2 then say s3 then bring s4 subsequently say s5 and bring s6	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( clean ( obj lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( bring ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( say ( words lambda ( $5 ( s5 ) ) ) ) ( find ( val lambda ( $6 ( s6 ) ) ) ) )
aquire s0 in the y direction then flatten s1 then pivot s2 then flatten s3 then say s4 then advance s5 in the z direction then do the goal test then say s6	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) ( goal ) ( say ( words lambda ( $6 ( s6 ) ) ) ) )
move s0 in the x direction then pivot s1 degrees then move s2 in the y direction then say s3	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
move s0 in the z direction next roll s1 degrees then move s2 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
flatten s0 then pivot s1 then flatten s2 then say s3 then move s4 in the z direction then do the goal test then say s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( goal ) ( say ( words lambda ( $5 ( s5 ) ) ) ) )
flatten s0 and pitch s1 units	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( pitch lambda ( $1 ( s1 ) ) ) ) )
move s0 in the y direction then roll s1 degrees then move s2 in the z direction then clean up s3 then execute the goal task	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) ( goal ) )
detect s0 in the x direction then flatten s1 then move upwards s2 in the z direction then flatten s3 then grab s4 then advance s5 in the x direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( x lambda ( $5 ( s5 ) ) ) ) )
pivot s0 degrees	( seq ( move ( roll lambda ( $0 ( s0 ) ) ) ) )
prance s0 in the y direction then roll s1 degrees then move s2 in the x direction then say s3	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) ( move ( roll lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) ( say ( words lambda ( $3 ( s3 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the z direction then flatten s3 then say s4 then advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
perform the gate task then declutter s0 then move s1 in the y direction then say s2 then yaw s3 units	( seq ( gate ) ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( say ( words lambda ( $2 ( s2 ) ) ) ) ( move ( yaw lambda ( $3 ( s3 ) ) ) ) )
flatten s0 subsequently roll s1 subsequently flatten s2 then say s3 subsequently grab item s4 subsequently find the thing s5	( seq ( flatten ( num lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( flatten ( num lambda ( $2 ( s2 ) ) ) ) ( grab ( val lambda ( $3 ( s3 ) ) ) ) ( move ( z lambda ( $4 ( s4 ) ) ) ) ( find ( val lambda ( $5 ( s5 ) ) ) ) )
clean s0 up then move s1 in the z direction then do the gate task then grab item s2 then pitch s3 units	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( move ( pitch lambda ( $3 ( s3 ) ) ) ) )
give to me s0 then move s1 in the y direction then s2 in the x direction	( seq ( bring ( val lambda ( $0 ( s0 ) ) ) ) ( move ( y lambda ( $1 ( s1 ) ) ) ) ( move ( x lambda ( $2 ( s2 ) ) ) ) )
detect s0 in the x direction then flatten s1 then walk s2 in the y direction then flatten s3 subsequently grab s4 subsequently advance s5 in the z direction	( seq ( find ( val lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( y lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( grab ( val lambda ( $4 ( s4 ) ) ) ) ( move ( z lambda ( $5 ( s5 ) ) ) ) )
pitch s0 units and flatten s1 ( seq ( move ( pitch lambda	( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) )
move forward s0 in the x direction then flatten s1 then pivot s2 then flatten s3 then say s4 then proceed s5 in the y direction then do the goal test then bring the thing s6	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) ( flatten ( num lambda ( $1 ( s1 ) ) ) ) ( move ( roll lambda ( $2 ( s2 ) ) ) ) ( flatten ( num lambda ( $3 ( s3 ) ) ) ) ( say ( words lambda ( $4 ( s4 ) ) ) ) ( move ( y lambda ( $5 ( s5 ) ) ) ) ( goal ) ( bring ( val lambda ( $6 ( s6 ) ) ) ) )
say s0 then move s1 in the z direction then do the gate task then grab item s2 then clean s3 up	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) ( move ( z lambda ( $1 ( s1 ) ) ) ) ( gate ) ( grab ( val lambda ( $2 ( s2 ) ) ) ) ( clean ( obj lambda ( $3 ( s3 ) ) ) ) )
wash this object and move s2 feet in the z direction	( seq ( clean ( obj lambda ( $0 ( s0 ) ) ) ) ( move ( yaw lambda ( $1 ( s1 ) ) ) ) ( move ( z lambda ( $2 ( s2 ) ) ) ) )
carry out the move task s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
run over s0 there in the x direction right now	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
skidaddle over there s0 in the y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
move as fast as possible s0 in the z direction	( seq ( move ( z lambda ( $0 ( s0 ) ) ) ) )
move slowly s0  in the x direction	( seq ( move ( x lambda ( $0 ( s0 ) ) ) ) )
tip toe on over there in the s0 y direction	( seq ( move ( y lambda ( $0 ( s0 ) ) ) ) )
go greet the person over yonder by saying s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
go be nice to that girl and that boy over there by saying s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
go greet the judge by saying the phrase s0	( seq ( say ( words lambda ( $0 ( s0 ) ) ) ) )
